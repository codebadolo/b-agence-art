# Generated by Django 5.2.3 on 2025-07-01 14:07

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=150)),
                ('categorie', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Langue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('niveau', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Localisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Talent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=150)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('photo_principale', models.ImageField(blank=True, null=True, upload_to='talents/photos/')),
                ('taille', models.CharField(blank=True, max_length=20)),
                ('poids', models.CharField(blank=True, max_length=20)),
                ('permis', models.CharField(blank=True, max_length=20)),
                ('langues', models.ManyToManyField(blank=True, to='talent.langue')),
                ('localisations', models.ManyToManyField(blank=True, to='talent.localisation')),
            ],
        ),
        migrations.CreateModel(
            name='ProjetArtistique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=250, verbose_name='Titre du projet')),
                ('description', models.TextField(blank=True, verbose_name='Description du projet')),
                ('type_projet', models.CharField(choices=[('film', 'Film'), ('serie', 'Série TV'), ('theatre', 'Théâtre'), ('publicite', 'Publicité'), ('court_metrage', 'Court-métrage'), ('web_serie', 'Web-série'), ('autre', 'Autre')], default='autre', max_length=50, verbose_name='Type de projet')),
                ('statut', models.CharField(choices=[('en_cours', 'En cours'), ('termine', 'Terminé'), ('pre_production', 'Pré-production'), ('en_developpement', 'En développement'), ('annule', 'Annulé')], default='en_cours', max_length=20, verbose_name='Statut du projet')),
                ('date_debut', models.DateField(blank=True, null=True, verbose_name='Date de début')),
                ('date_fin_prevue', models.DateField(blank=True, null=True, verbose_name='Date de fin prévue')),
                ('date_fin_reelle', models.DateField(blank=True, null=True, verbose_name='Date de fin réelle')),
                ('image_principale', models.ImageField(blank=True, null=True, upload_to='projets/images/', verbose_name='Image du projet')),
                ('liens_externes', models.URLField(blank=True, max_length=500, verbose_name='Lien externe (ex: site officiel, bande-annonce)')),
                ('talents', models.ManyToManyField(blank=True, related_name='projets_artistiques', to='talent.talent', verbose_name='Talents impliqués')),
            ],
            options={
                'verbose_name': 'Projet Artistique',
                'verbose_name_plural': 'Projets Artistiques',
                'ordering': ['-date_debut', 'titre'],
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('photo', 'Photo'), ('video', 'Vidéo')], max_length=10)),
                ('fichier', models.FileField(upload_to='talents/media/')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('talent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medias', to='talent.talent')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.CharField(blank=True, max_length=20)),
                ('titre', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True)),
                ('role', models.CharField(blank=True, max_length=150)),
                ('type_experience', models.CharField(blank=True, max_length=100)),
                ('talent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='talent.talent')),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=250, verbose_name="Nom de l'événement")),
                ('type_evenement', models.CharField(choices=[('festival', 'Festival'), ('ceremonie_prix', 'Cérémonie de Prix'), ('projection', 'Projection Spéciale'), ('autre', 'Autre Événement')], default='autre', max_length=20, verbose_name="Type d'événement")),
                ('date_debut', models.DateField(verbose_name='Date de début')),
                ('date_fin', models.DateField(blank=True, null=True, verbose_name='Date de fin (si applicable)')),
                ('lieu', models.CharField(blank=True, max_length=250, verbose_name="Lieu de l'événement")),
                ('description', models.TextField(blank=True, verbose_name="Description de l'événement")),
                ('liens_externes', models.URLField(blank=True, max_length=500, verbose_name='Lien externe (ex: site officiel)')),
                ('projets_associes', models.ManyToManyField(blank=True, related_name='evenements_associes', to='talent.projetartistique', verbose_name='Projets associés (ex: sélection officielle)')),
                ('talents_participants', models.ManyToManyField(blank=True, related_name='evenements_participes', to='talent.talent', verbose_name='Talents participants')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_contact', models.CharField(choices=[('email', 'Email'), ('telephone', 'Téléphone'), ('linkedin', 'LinkedIn'), ('twitter', 'Twitter'), ('facebook', 'Facebook'), ('instagram', 'Instagram'), ('autre', 'Autre')], max_length=20)),
                ('valeur', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('talent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='talent.talent')),
            ],
        ),
        migrations.CreateModel(
            name='Actualite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=250, verbose_name="Titre de l'actualité")),
                ('slug', models.SlugField(help_text="Un identifiant unique pour l'URL, généré à partir du titre.", max_length=500, unique=True, verbose_name='Slug (URL propre)')),
                ('type_actualite', models.CharField(choices=[('actualite', 'Actualité Générale'), ('interview', 'Interview'), ('article', 'Article'), ('communique', 'Communiqué de Presse')], default='actualite', max_length=20, verbose_name="Type d'actualité")),
                ('contenu', models.TextField(verbose_name="Contenu de l'actualité")),
                ('date_publication', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de publication')),
                ('image_principale', models.ImageField(blank=True, null=True, upload_to='actualites/images/', verbose_name='Image principale')),
                ('est_publie', models.BooleanField(default=True, verbose_name='Publiée sur le site')),
                ('talent_associe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actualites', to='talent.talent', verbose_name='Talent associé (optionnel)')),
            ],
            options={
                'verbose_name': 'Actualité',
                'verbose_name_plural': 'Actualités',
                'ordering': ['-date_publication'],
            },
        ),
        migrations.CreateModel(
            name='TalentCompetence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.CharField(blank=True, max_length=50)),
                ('details', models.TextField(blank=True)),
                ('competence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='talent.competence')),
                ('talent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='talent.talent')),
            ],
            options={
                'unique_together': {('talent', 'competence')},
            },
        ),
        migrations.AddField(
            model_name='talent',
            name='competences',
            field=models.ManyToManyField(blank=True, through='talent.TalentCompetence', to='talent.competence'),
        ),
        migrations.CreateModel(
            name='TalentAttribut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cle', models.CharField(max_length=100)),
                ('valeur', models.TextField(blank=True)),
                ('talent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributs', to='talent.talent')),
            ],
            options={
                'unique_together': {('talent', 'cle')},
            },
        ),
    ]
